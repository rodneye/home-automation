version: '3.8'

services:
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
    ports:
      - "3000:3000"  # web UI
    volumes:
      - ./custom-docker-configs/grafana_data:/var/lib/grafana
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - './custom-docker-configs/prometheus.yml:/etc/prometheus/prometheus.yml'
      - './custom-docker-configs/alert.rules:/etc/prometheus/alert.rules'
      - './custom-docker-configs/prometheus_data:/prometheus'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://<>SERVER-IP:9090'
    ports:
      - 9090:9090   # web UI
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093   # web UI
    restart: unless-stopped
    volumes:
      - './custom-docker-configs/alertmanager.yml:/etc/alertmanager/alertmanager.yml'

  blackbox:
    image: prom/blackbox-exporter
    ports:
      - 9115:9115   # web UI
    restart: unless-stopped

  speedtest-exporter:
    image: miguelndecarvalho/speedtest-exporter
    container_name: speedtest-exporter
    ports:
      - 9798:9798   # web UI
    restart: unless-stopped

  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    cap_add:
      - NET_ADMIN
    # Removed network_mode: host so we can explicitly map ports
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "6080:80/tcp" 
      - "6443:443/tcp"
      - "6443:443/udp"
      - "3001:3000/tcp" # web UI
      - "853:853/tcp"
      - "853:853/udp"
      - "67:67/udp"
      - "68:68/udp"
      - "784:784/udp"
      - "8853:8853/udp"
      - "5443:5443/tcp"
      - "5443:5443/udp"
    volumes:
      - ./custom-docker-configs/adguard/adguard_data:/opt/adguardhome/work
      - ./custom-docker-configs/adguard/adguard_config:/opt/adguardhome/conf
    restart: unless-stopped

  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    # Removed network_mode: host so we can explicitly bind ports
    ports:
      - "8123:8123" # web UI
    volumes:
      - ./custom-docker-configs/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    restart: always
    ports:
      - "80:80"    # Public HTTP Port
      - "443:443"  # Public HTTPS Port
      - "81:81"    # Admin Web Port User: admin@example.com Pass: changeme
    environment:
      DB_MYSQL_HOST: db
      DB_MYSQL_PORT: "3306"
      DB_MYSQL_USER: npm
      DB_MYSQL_PASSWORD: "SET-PASSWORD"
      DB_MYSQL_NAME: npm
      # If you prefer SQLite, comment out the above and uncomment the line below:
      # DB_SQLITE_FILE: "/data/database.sqlite"
    volumes:
      - ./custom-docker-configs/nginx/data/app:/data
      - ./custom-docker-configs/letsencrypt:/etc/letsencrypt
    depends_on:
      - db

  db:
    image: jc21/mariadb-aria:latest
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: npm
      MYSQL_DATABASE: npm
      MYSQL_USER: npm
      MYSQL_PASSWORD: "SET-PASSWORD"
    volumes:
      - ./custom-docker-configs/mysql:/var/lib/mysql

volumes:
  grafana_data:
    driver: local
  tempo_data:
    driver: local
  loki_data:
    driver: local
  mimir_data:
    driver: local